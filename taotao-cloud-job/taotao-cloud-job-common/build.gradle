apply plugin: "com.google.protobuf"

dependencies {
    api "io.github.shuigedeng:taotao-boot-starter-core"
    api "net.devh:grpc-client-spring-boot-starter:3.1.0.RELEASE"

    api "io.netty:netty-all:4.2.6.Final"
    api "com.google.protobuf:protobuf-java:4.32.0"
    api "com.google.protobuf:protobuf-java-util:4.32.0"
    api "org.apache.thrift:libthrift:0.21.0"
    api "io.grpc:grpc-api:1.75.0"
    api "io.grpc:grpc-context:1.75.0"
    api "io.grpc:grpc-core:1.75.0"
    api "io.grpc:grpc-netty:1.75.0"
    api "io.grpc:grpc-netty-shaded:1.75.0"
    api "io.grpc:grpc-protobuf:1.75.0"
    api "io.grpc:grpc-protobuf-lite:1.75.0"
    api "io.grpc:grpc-stub:1.75.0"
    api "io.grpc:grpc-services:1.75.0"
    testImplementation("io.grpc:grpc-testing:1.75.0")
    api 'com.google.code.gson:gson:2.13.2'
    api 'com.google.guava:guava:33.4.8-jre'
    api 'org.reflections:reflections:0.10.2'

    api 'jakarta.xml.ws:jakarta.xml.ws-api:4.0.2'
    api "jakarta.servlet:jakarta.servlet-api:6.1.0"
    api "jakarta.validation:jakarta.validation-api:3.1.0"
    api "jakarta.annotation:jakarta.annotation-api:3.0.0"
    api "jakarta.activation:jakarta.activation-api:2.1.3"
    api "jakarta.json:jakarta.json-api:2.1.3"
    api "jakarta.json.bind:jakarta.json.bind-api:3.0.1"
}

protobuf {
    //指定protoc编译器位置 在 protoc 模块下，可以指定多个配置，但是会以最后一个配置为准。
    protoc {
        //https://repo1.maven.org/maven2/com/google/protobuf/protoc/
        //直接使用Maven Central上已经编译好的protoc编译器，
        artifact = "com.google.protobuf:protoc:4.32.0"
        //指定本地已经安装的protoc编译器
        //path = '/usr/local/bin/protoc'
    }
    //generatedFilesBaseDir = "$projectDir/src/generated"
    clean {
        delete generatedFilesBaseDir
    }
    //指定protoc运行插件
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.75.0"
        }
        //javalite {
        //    // The codegen for lite comes as a separate artifact
        //    artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.1'
        //}
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {
                option 'jakarta_omit'
                option '@generated=omit'
            }
        }
    }
}
