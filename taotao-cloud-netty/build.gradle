buildscript {
    repositories {
        mavenLocal()
        mavenCentral()

        maven {
            url = "https://repo1.maven.org/maven2"
        }

        maven {
            allowInsecureProtocol = true
            url = 'https://maven.aliyun.com/repository/public'
        }
        maven {
            allowInsecureProtocol = true

            credentials {
                username = findProperty("mavenUsername") ?: System.getenv("TAOTAO_CLOUD_MAVEN_USERNAME")
                password = findProperty("mavenPassword") ?: System.getenv("TAOTAO_CLOUD_MAVEN_PASSWORD")
            }
            url = 'https://repo.rdc.aliyun.com/repository/136936-release-reey0l/'
        }
        //阿里云新的仓库
        maven {
            credentials {
                username = findProperty("mavenUsernameNew") ?: System.getenv("TAOTAO_CLOUD_MAVEN_USERNAME_NEW")
                password = findProperty("mavenPasswordNew") ?: System.getenv("TAOTAO_CLOUD_MAVEN_PASSWORD_NEW")
            }
            url = 'https://packages.aliyun.com/60516c4824e1e6fbecd22990/maven/2085441-release-8v0qbs'
        }

        maven {
            allowInsecureProtocol = true
            url = "https://mirrors.cloud.tencent.com/nexus/repository/maven-public/"
        }

        maven {
            allowInsecureProtocol = true
            url = "https://mirrors.huaweicloud.com/repository/maven/"
        }

        maven { url = "https://repo.spring.io/snapshot" }
        maven { url = "https://repo.spring.io/milestone" }
        maven { url = 'https://repo.spring.io/release' }

        maven { url = "https://maven.aliyun.com/repository/central" }
        maven { url = "https://maven.aliyun.com/repository/public" }
        maven { url = "https://maven.aliyun.com/repository/google" }
        maven { url = "https://maven.aliyun.com/repository/gradle-plugin" }
        maven { url = "https://maven.aliyun.com/repository/spring" }
        maven { url = "https://maven.aliyun.com/repository/spring-plugin" }
        maven { url = "https://maven.aliyun.com/repository/grails-core" }
        maven { url = "https://maven.aliyun.com/repository/apache-snapshots" }

        maven { url = "https://repository.aspose.com/repo/" }
        maven { url = "https://repo.e-iceblue.cn/repository/maven-public/" }

        maven { url = "https://s01.oss.sonatype.org/content/repositories/snapshots/" }
    }

    dependencies {
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.9.5"
    }
}

apply plugin: "java"
apply plugin: "idea"
apply plugin: "com.google.protobuf"

dependencies {
    implementation "io.netty:netty-all:4.2.6.Final"
    implementation "com.google.protobuf:protobuf-java:4.32.0"
    implementation "com.google.protobuf:protobuf-java-util:4.32.0"
    implementation "org.apache.thrift:libthrift:0.21.0"
    implementation "io.grpc:grpc-api:1.75.0"
    implementation "io.grpc:grpc-context:1.75.0"
    implementation "io.grpc:grpc-core:1.75.0"
    implementation "io.grpc:grpc-netty:1.75.0"
    implementation "io.grpc:grpc-netty-shaded:1.75.0"
    implementation "io.grpc:grpc-protobuf:1.75.0"
    implementation "io.grpc:grpc-protobuf-lite:1.75.0"
    implementation "io.grpc:grpc-stub:1.75.0"
    implementation "io.grpc:grpc-services:1.75.0"
    testImplementation("io.grpc:grpc-testing:1.75.0")
    implementation 'com.google.code.gson:gson:2.13.2'
    implementation 'com.google.guava:guava:33.5.0-jre'

    api "jakarta.servlet:jakarta.servlet-api:6.1.0"
    api "jakarta.validation:jakarta.validation-api:3.1.0"
    api "jakarta.annotation:jakarta.annotation-api:3.0.0"
    api "jakarta.activation:jakarta.activation-api:2.1.3"
    api "jakarta.json:jakarta.json-api:2.1.3"
    api "jakarta.json.bind:jakarta.json.bind-api:3.0.1"

    implementation 'org.slf4j:slf4j-api:2.0.17'
    implementation 'ch.qos.logback:logback-core:1.5.18'
    implementation 'ch.qos.logback:logback-access:1.5.18'
    implementation 'ch.qos.logback:logback-classic:1.5.18'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.13.4'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.13.4'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.13.4'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.13.4'
    testImplementation "org.assertj:assertj-core:3.27.6"

    compileOnly "org.projectlombok:lombok:1.18.42"
    annotationProcessor "org.projectlombok:lombok:1.18.42"
    testCompileOnly "org.projectlombok:lombok:1.18.42"
    testAnnotationProcessor "org.projectlombok:lombok:1.18.42"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
}

protobuf {
    //指定protoc编译器位置 在 protoc 模块下，可以指定多个配置，但是会以最后一个配置为准。
    protoc {
        //https://repo1.maven.org/maven2/com/google/protobuf/protoc/
        //直接使用Maven Central上已经编译好的protoc编译器，
        artifact = "com.google.protobuf:protoc:4.32.0"
        //指定本地已经安装的protoc编译器
        //path = '/usr/local/bin/protoc'
    }
    //generatedFilesBaseDir = "$projectDir/src/generated"
    clean {
        delete generatedFilesBaseDir
    }
    //指定protoc运行插件
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.75.0"
        }
        //javalite {
        //    // The codegen for lite comes as a separate artifact
        //    artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.1'
        //}
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {
                option 'jakarta_omit'
                option '@generated=omit'
            }
        }
    }
}

//protobuf {
//    protoc {
//        artifact = "com.google.protobuf:protoc:4.32.0"
//    }
//
//    plugins {
//        grpc {
//            artifact = "io.grpc:protoc-gen-grpc-java:1.75.0"
//        }
//    }
//
//    generateProtoTasks.generatedFilesBaseDir = "src"
//
//    generateProtoTasks {
//        all()*.plugins {
//            grpc {
//                setOutputSubDir "java"
//            }
//        }
//    }
//}
