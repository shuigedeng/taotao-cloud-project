dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
    }
    implementation "org.springframework.boot:spring-boot-starter-undertow"
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'io.netty:netty-all'
    implementation 'com.alibaba.fastjson2:fastjson2'
    implementation "com.mysql:mysql-connector-j:9.4.0"

    implementation 'org.slf4j:slf4j-api:2.0.17'
    implementation 'ch.qos.logback:logback-core:1.5.18'
    implementation 'ch.qos.logback:logback-access:1.5.18'
    implementation 'ch.qos.logback:logback-classic:1.5.18'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.13.4'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.13.4'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.13.4'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.13.4'
    testImplementation "org.assertj:assertj-core:3.27.4"

    compileOnly "org.projectlombok:lombok:1.18.38"
    annotationProcessor "org.projectlombok:lombok:1.18.38"
    testCompileOnly "org.projectlombok:lombok:1.18.38"
    testAnnotationProcessor  "org.projectlombok:lombok:1.18.38"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
}

tasks.register("generateMd5ForZip", Exec) {
    def zipFile = file("${project.layout.buildDirectory.asFile.get()}/libs/taotao-cloud-jdbcpool-2025.10.jar")
    def md5File = file("${project.layout.buildDirectory.asFile.get()}/libs/taotao-cloud-jdbcpool-2025.10.jar.md5")

    inputs.file zipFile
    outputs.file md5File

    if (System.getProperty("os.name").toLowerCase().contains("win")) {
        // Windows 系统使用 cmd 执行命令并将结果重定向到文件
        commandLine 'cmd', '/c', "certutil -hashfile ${zipFile.absolutePath} MD5 | findstr /v \"MD5\" | findstr /v \"certutil\" > ${md5File.absolutePath}"
    } else {
        // Unix/Linux 系统使用 md5sum 命令
        commandLine 'bash', '-c', "md5sum ${zipFile.absolutePath} | awk '{print \$1}' > ${md5File.absolutePath}"
    }
}

jar.finalizedBy("generateMd5ForZip")
