# 新建网络 docker-compose -f  3-zk-kafka-cluster.yml up -d
# docker network ls #查看当前网络
# docker network create --driver bridge --subnet 172.11.0.0/16 --gateway 172.11.0.1 taotao-cluster-network

version: '3.8'
services:
  #https://www.pudn.com/news/632d53b0272bb74d44e90b24.html    需要执行 START SLAVE ; SHOW SLAVE STATUS\G
  mysql8:
    hostname: mysql8
    image: mysql:8.0
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_USER: master
      MYSQL_PASSWORD: 123456
    command:
      --bind-address=172.11.0.10
      --default-authentication-plugin=mysql_native_password
      --max_connections=1000
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --default-time-zone='+8:00'
      --explicit_defaults_for_timestamp=true
      --lower_case_table_names=1
      --expire-logs-days=7
    privileged: true
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
    restart: always
    container_name: mysql8
    ports:
      - "3306:3306"
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.10

  redis:
    image: redis:7.4.0
    container_name: redis
    environment:
      TZ: Asia/Shanghai
    ports:
      - "6379:6379"
    #command: [ "redis-server","/etc/redis/redis.conf" ]
    restart: always
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.12

  nacos:
    image: nacos/nacos-server:v2.4.2
    restart: always
    container_name: nacos
    privileged: true
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9849:9849"
    environment:
      MODE: standalone
      SPRING_DATASOURCE_PLATFORM: mysql
      MYSQL_SERVICE_HOST: 172.11.0.10
      MYSQL_SERVICE_PORT: 3306
      MYSQL_SERVICE_USER: root
      MYSQL_SERVICE_PASSWORD: 123456
      MYSQL_SERVICE_DB_NAME: "nacos2.4.2"
      SQL_SERVICE_DB_PARAM: characterEncoding=utf8&connectTimeout=10000&socketTimeout=30000&autoReconnect=true&useSSL=false
      JVM_XMS: 256m
      JVM_XMX: 512m
      NACOS_AUTH_ENABLE: true
      NACOS_AUTH_TOKEN: SecretKey01234567890123456789012345345678999987654901234567890123456789
      NACOS_AUTH_IDENTITY_KEY: nacos
      NACOS_AUTH_IDENTITY_VALUE: nacos
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.13

  sentinel-dashboard:
    image: registry.cn-hangzhou.aliyuncs.com/taotao-cloud-project/taotao-cloud-sentinel:v1.8.8
    container_name: sentinel-dashboard
    ports:
      - "8858:8858"
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.14

  dubbo-admin:
    image: apache/dubbo-admin:0.6.0
    container_name: dubbo-admin
    ports:
      - "38080:38080"
    privileged: true
    environment:
      - TZ=Asia/Shanghai
      # nacos config, add parameters to url like username=nacos&password=nacos
      - admin.registry.address=nacos://192.168.218.2:8848?namespace=taotao-cloud-dubbo&username=nacos&password=nacos
      - admin.registry.group=DUBBO_REGISTRY_GROUP
      - admin.config-center=nacos://192.168.218.2:8848?namespace=taotao-cloud-dubbo&username=nacos&password=nacos
      - admin.config-center.group=DUBBO_REGISTRY_GROUP
      - admin.metadata-report.address=nacos://192.168.218.2:8848?namespace=taotao-cloud-dubbo&username=nacos&password=nacos
      - admin.metadata-report.group=DUBBO_REGISTRY_GROUP
      - admin.root.user.name=admin
      - admin.root.user.password=123456
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.15

  skywalking-oap:
    image: apache/skywalking-oap-server:9.7.0-java17
    container_name: skywalking-oap
    restart: always
    ports:
      - "11800:11800"
      - "12800:12800"
      - "9412:9412"
    environment:
      - TZ=Asia/Shanghai
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.16
  skywalking-ui:
    image: apache/skywalking-ui:9.7.0-java17
    container_name: skywalking-ui
    restart: always
    ports:
      - "18080:8080"
    environment:
      - TZ=Asia/Shanghai
      - SW_OAP_ADDRESS=http://172.11.0.16:12800
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.17

  zipkin:
    image: openzipkin/zipkin:3.4.2
    container_name: zipkin
    environment:
      - STORAGE_TYPE=mysql
      - MYSQL_DB=taotao-cloud-zipkin-3.4.2
      - MYSQL_USER=root
      - MYSQL_PASS=123456
      - MYSQL_HOST=172.11.0.10
      - MYSQL_TCP_PORT=3306
    ports:
      - "9411:9411"
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.18

  rocketmq-nameserv:
    image: apache/rocketmq:4.9.6
    container_name: rocketmq-nameserv
    ports:
      - "9876:9876"
    restart: always
    privileged: true
    command: [ "sh","mqnamesrv" ]
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.19
  rocketmq-broker:
    image: apache/rocketmq:4.9.6
    container_name: rocketmq-broker
    ports:
      - "10909:10909"
      - "10911:10911"
      - "10912:10912"
    restart: always
    privileged: true
    depends_on:
      - 'rocketmq-nameserv'
    environment:
      NAMESRV_ADDR: 172.11.0.19:9876
    #broker.conf    brokerIP1=172.11.0.20  
    volumes:
      - ./rocketmq/broker.conf:/home/rocketmq/rocketmq-4.9.6/conf/broker.conf 
    command: [ "sh","mqbroker","-c","/home/rocketmq/rocketmq-4.9.6/conf/broker.conf", "autoCreateTopicEnable=true" ]
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.20
  rocketmq-dashboard:
    image: apacherocketmq/rocketmq-dashboard:latest
    container_name: rocketmq-dashboard
    ports:
      - "8082:8080"
    restart: always
    privileged: true
    depends_on:
      - 'rocketmq-nameserv'
    environment:
      JAVA_OPTS: '-Drocketmq.namesrv.addr=172.11.0.19:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false'
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.21

  arthas:
    image: registry.cn-hangzhou.aliyuncs.com/taotao-cloud-project/taotao-cloud-arthas:4.0.2
    container_name: arthas
    restart: always
    ports:
      - "7777:7777"
      - "8083:8080"
    command:
      - "java -jar /arthas-tunnel-server.jar"
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.22

  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.23

  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"	  
    environment:
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://192.168.218.2:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_NUM_PARTITIONS=1
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_CFG_MIN_INSYNC_REPLICAS=1
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.24
  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: kafka-ui
    restart: always
    ports:
      - "8084:8080"
    environment:
      # 集群名称
      - KAFKA_CLUSTERS_0_NAME=kafkaCluster
      # 集群地址
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=192.168.218.2:9092
      - DYNAMIC_CONFIG_ENABLED=true
      - AUTH_TYPE=LOGIN_FORM
      - SPRING_SECURITY_USER_NAME=admin
      - SPRING_SECURITY_USER_PASSWORD=123456
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.25

  minio:
    image: quay.io/minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9090:9090"
    restart: always
    command: server /data --console-address ":9090"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.26	
  		

#  sentinel-dashboard:
#    image: registry.cn-hangzhou.aliyuncs.com/taotao-cloud-project/taotao-cloud-xxljob:2025.11
#    container_name: taotao-cloud-xxljob
#    ports:
#      - "33335:33335"
#    networks:
#      taotao-cluster-network:
#        ipv4_address: 172.11.0.17
#
#  sentinel-dashboard:
#    image: registry.cn-hangzhou.aliyuncs.com/taotao-cloud-project/taotao-cloud-gateway:2025.11
#    container_name: taotao-cloud-gateway
#    ports:
#      - "33336:33336"
#    networks:
#      taotao-cluster-network:
#        ipv4_address: 172.11.0.18


  ####################################################################

  redis-stack:
    image: redis/redis-stack:latest
    container_name: redis-stack
    environment:
      TZ: Asia/Shanghai
    ports:
      - "6379:6379"
      - "8001:8001"
    restart: always
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.64



  #kafka:
  #  image: bitnami/kafka:3.7
  #  container_name: kafka
  #  ports:
  #    - "9092:9092"
  #    - "9093:9093"
  #  environment:
  #    ### 通用配置
  #    # 允许使用kraft，即Kafka替代Zookeeper
  #    - KAFKA_ENABLE_KRAFT=yes
  #    # kafka角色，做broker，也要做controller
  #    - KAFKA_CFG_PROCESS_ROLES=broker,controller
  #    # 指定供外部使用的控制类请求信息
  #    - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  #    # 定义kafka服务端socket监听端口
  #    - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
  #    # 定义安全协议
  #    - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
  #    # 使用Kafka时的集群id，集群内的Kafka都要用这个id做初始化，生成一个UUID即可
  #    - KAFKA_KRAFT_CLUSTER_ID=LelM2dIFQkiUFvXCEcqRWA
  #    # 集群地址
  #    - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@172.11.0.14:9093
  #    # 允许使用PLAINTEXT监听器，默认false，不建议在生产环境使用
  #    - ALLOW_PLAINTEXT_LISTENER=yes
  #    # 设置broker最大内存，和初始内存
  #    #- KAFKA_HEAP_OPTS=-Xmx512M -Xms256M
  #    # 不允许自动创建主题
  #    - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
  #    ### broker配置
  #    # 定义外网访问地址（宿主机ip地址和端口）
  #    - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
  #    # broker.id，必须唯一
  #    - KAFKA_BROKER_ID=1
  #    - KAFKA_CFG_NODE_ID=1
  #  restart: always
  #  networks:
  #    taotao-cluster-network:
  #      ipv4_address: 172.11.0.14
  #kafka-ui:
  #  image: provectuslabs/kafka-ui:v0.7.2
  #  container_name: kafka-ui
  #  restart: always
  #  ports:
  #    - "8084:8080"
  #  environment:
  #    # 集群名称
  #    - KAFKA_CLUSTERS_0_NAME=kafkaCluster
  #    # 集群地址
  #    - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=127.0.0.1:9092
  #    - DYNAMIC_CONFIG_ENABLED=true
  #    - AUTH_TYPE=LOGIN_FORM
  #    - SPRING_SECURITY_USER_NAME=admin
  #    - SPRING_SECURITY_USER_PASSWORD=123456
  #  networks:
  #    taotao-cluster-network:
  #      ipv4_address: 172.11.0.15
  #


  #rocketmq-nameserv:
  #  image: apache/rocketmq:5.3.0
  #  container_name: rocketmq-nameserv
  #  ports:
  #    - "9876:9876"
  #  restart: always
  #  privileged: true
  #  environment:
  #    JAVA_OPT_EXT: "-Duser.home=/home/rocketmq -Xms256M -Xmx256M -Xmn128m"
  #  command: [ "sh","mqnamesrv" ]
  #  networks:
  #    taotao-cluster-network:
  #      ipv4_address: 172.11.0.35
  #rocketmq-broker:
  #  image: apache/rocketmq:5.1.0
  #  container_name: rocketmq-broker
  #  ports:
  #    - "10909:10909"
  #    - "10911:10911"
  #  restart: always
  #  privileged: true
  #  volumes:
  #    - /root/compose/rocketmq/broker.conf:/home/rocketmq/broker.conf
  #  depends_on:
  #    - 'rocketmq-nameserv'
  #  environment:
  #    NAMESRV_ADDR: 172.11.0.35:9876
  #    JAVA_OPT_EXT: "-Duser.home=/home/rocketmq -Xms256M -Xmx256M -Xmn128m"
  #  command: [ "sh","mqbroker","-c","/home/rocketmq/broker.conf", "autoCreateTopicEnable=true" ]
  #  networks:
  #    taotao-cluster-network:
  #      ipv4_address: 172.11.0.36
  #rocketmq-dashboard:
  #  image: apacherocketmq/rocketmq-dashboard:latest
  #  container_name: rocketmq-dashboard
  #  ports:
  #    - "8082:8080"
  #  restart: always
  #  privileged: true
  #  depends_on:
  #    - 'rocketmq-nameserv'
  #  environment:
  #    JAVA_OPTS: '-Xmx256M -Xms256M -Xmn128M -Drocketmq.namesrv.addr=172.11.0.35:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false'
  #  networks:
  #    taotao-cluster-network:
  #      ipv4_address: 172.11.0.37

  powerjob:
    container_name: powerjob-server
    image: powerjob/powerjob-server:latest
    restart: always
    environment:
      JVMOPTIONS: "-Xmx512m"
      PARAMS: "--spring.profiles.active=product --oms.mongodb.enable=false --spring.datasource.core.jdbc-url=jdbc:mysql://172.11.0.10:3306/powerjob-product?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai --spring.datasource.core.username=root --spring.datasource.core.password=123456"
    ports:
      - "7700:7700"
      - "10086:10086"
      - "10010:10010"
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.52

  seata:
    container_name: seata
    image: seataio/seata-server:2.2.0
    restart: always
    ports:
      - "8091:8091"
      - "7091:7091"
    volumes:
      - "/usr/share/zoneinfo/Asia/Shanghai:/etc/localtime"        #设置系统时区
      - "/usr/share/zoneinfo/Asia/Shanghai:/etc/timezone"  #设置时区
      - /root/compose/seata/application.yml:/seata-server/resources/application.yml
    environment:
      STORE_MODE: db
      SEATA_PORT: 8091
      SEATA_IP: 127.0.0.1
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.17

  hertzbeat:
    image: tancloud/hertzbeat
    container_name: hertzbeat
    ports:
      - "1157:1157"
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.99

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    command: [--auth]
    ports:
      - "27017:27017"
    environment:
      TZ: Asiz/Shanghai
      MONGO_INITDB_DATABASE: taotao-cloud
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
      MONGO_USERNAME: root
      MONGO_PASSWORD: 123456
    volumes:
      - ./mongo/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.18

  fe:
    image: apache/doris:2.0.0_alpha-fe-x86_64
    hostname: fe
    ports:
      - "8030:8030"
      - "9030:9030"
    environment:
      - FE_SERVERS=fe1:172.11.0.19:9010
      - FE_ID=1
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.19
  be:
    image: apache/doris:2.0.0_alpha-be-x86_64
    hostname: be
    ports:
      - "8040:8040"
    environment:
      - FE_SERVERS=fe1:172.11.0.19:9010
      - BE_ADDR=172.11.0.20:9050
    depends_on:
      - fe
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.20






#
#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.0
#    container_name: elasticsearch
#    restart: always
#    ports:
#      - 9200:9200
#    environment:
#      - "discovery.type=single-node" #单机模式启动
#      - "TZ=Asia/Shanghai" # 设置时区
#      - "bootstrap.memory_lock=true" #锁定物理内存地址，防止es内存被交换出去，也就是避免es使用swap交换分区，频繁的交换，会导致IOPS变高
#      - "ES_JAVA_OPTS=-Xms1024m -Xmx2048m" # 设置jvm内存大小
#      - "xpack.security.enabled=false" #禁用SSL加密访问
#    volumes:
#      - $PWD/elasticsearch/data:/usr/share/elasticsearch/data
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1

  rabbitmq:
    image: rabbitmq:3.12.2-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=root
      - RABBITMQ_DEFAULT_PASS=123456
      - RABBITMQ_ERLANG_COOKIE=CURIOAPPLICATION
      - RABBITMQ_NODENAME:rabbitmq
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.63

  loki:
    container_name: loki
    image: grafana/loki:2.8.3
    restart: always
    privileged: true
    volumes:
      - /root/compose/loki:/mnt/config
    environment:
      - TZ=Asia/Shanghai
      - LANG=zh_CN.UTF-8
    ports:
      - "3100:3100"
    command: -config.file=/mnt/config/loki-config.yaml
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.70
  promtail:
    container_name: promtail
    image: grafana/promtail:2.8.3
    privileged: true
    restart: always
    volumes:
      - /root/compose/promtail:/etc/promtail/
    environment:
      - TZ=Asia/Shanghai
      - LANG=zh_CN.UTF-8
    ports:
      - "9080:9080"
    command: -config.file=/etc/promtail/promtail-config.yaml
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.71
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    environment:
      - GF_SECURITY_ADMIN_USER=admin             #设置管理员用户名
      - GF_SECURITY_ADMIN_PASSWORD=admin        #设置管理员密码
#      - GF_USERS_ALLOW_SIGN_UP=false
#      - GF_AUTH_ANONYMOUS_ENABLED=true
#      - GF_EXPLORE_ENABLED=true
#      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
#      - GF_AUTH_OAUTH_AUTO_LOGIN=true
#      - GF_SMTP_ENABLED=true
#      - GF_SMTP_HOST=smtp.exmail.qq.com:465     #设置SMTP发送信息
#      - GF_SMTP_USER=98@qq.com
#      - GF_SMTP_PASSWORD=123456
#      - GF_SMTP_FROM_ADDRESS=test@qq.com
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,grafana-piechart-panel
    ports:
      - "3000:3000"
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.72
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    volumes:
      - /root/compose/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "19090:9090"
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.73
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: always
    volumes:
      - /root/compose/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "19093:9093"
      - "19094:9094"
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.74
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: always
    ports:
      - "9101:9100"
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.75

  pgsql:
    image: postgres:latest
    container_name: pgsql
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=123456
      - ALLOW_IP_RANGE=0.0.0.0/0
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.80

  openresty:
    image: openresty/openresty:alpine
    container_name: openresty
    environment:
      TZ: Asia/Shanghai
    ports:
      - "8000:80"
    volumes:
      - /root/compose/openresty/openresty-default.conf:/etc/nginx/conf.d/default.conf
      - /root/compose/openresty/openresty-nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf
    restart: always
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.100


  gateway:
    image: registry.cn-hangzhou.aliyuncs.com/taotao-cloud-project/taotao-cloud-gateway:2025.11
    container_name: taotao-cloud-gateway
    restart: always
    environment:
      TZ: Asia/Shanghai
    ports:
      - "33333:33333"
    volumes:
      - /root/compose/taotao-cloud-gateway:/root/logs
    networks:
      taotao-cluster-network:
        ipv4_address: 172.11.0.200
#    # 健康检查
#    healthcheck:
#      # mysqladmin -uroot -p123  ping -h127.0.0.1
#      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
#      #      test: [ "CMD", "mysqladmin","-u","root","-p","123" ,"ping", "-h", "127.0.0.1" ]
#      timeout: 45s
#      interval: 10s
#      retries: 10
    healthcheck:
      test: ["CMD-SHELL", "curl -sS 127.0.0.1:11384/pacs/v2/dicom/echo || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  taotao-cluster-network:
    external: true
