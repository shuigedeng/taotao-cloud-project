apply plugin: "com.github.spotbugs"

dependencies {
    compileOnly "com.github.spotbugs:spotbugs-annotations:4.9.6"
    spotbugsPlugins "com.h3xstream.findsecbugs:findsecbugs-plugin:1.14.0"
}

spotbugs {
    ignoreFailures = false
    showStackTraces = true
    showProgress = true
    //SpotBugs按严重程度高到低将Bug分为了三个等级P1、P2和P3，reportLevel属性指明达到哪个等级的Bug才需要展示在报告里面，
    //它可配置值对应有HIGH、MEDIUM、LOW和DEFAULT，它们定义在Confidence.groovy中。默认值是DEFAULT等同于MEDIUM，意思是要达到P2级别，那就意味着低级别的P3 Bug将被忽略
    //reportLevel = 'default'
    //reports配置报告的类型，有html、xml、sarif和text四种，配置在SpotBugsTask中（比如spotbugsMain {}），再往里一层可配置的属性不是很多，参考SpotBugsReport
    //reportsDir = file("$buildDir/reports/spotbugs")
    //effort是配置代码检测预期的级别，级别由低到高分别为min、less、more、max，级别越高计算成本越高，花费的时间也就越长，
    //在这个文档Effort里面有表格清晰的列出了这几个级别分别包含了哪些检查内容。effort的默认值是default，等同于more
    //effort = 'default'
    //这两个属性可以分别指定使用（visitors）和禁用（omitVisitors）检查器，一个检查器会包含一个或者多个Bug descriptions中提到的检查项，
    //所以这两个属性配置的目的和includeFilter和excludeFilter是一样的，让我们可以为项目做定制化，只是从检查器的维度进行配置。
    //在Detectors中将Spotbugs所有的检查器都列出来了，在不配置的情况下，Standard detectors中列出来的默认使用，Disabled detectors中列出来的默认禁用。
    visitors = [ 'FindSqlInjection', 'SwitchFallthrough' ]
    omitVisitors = [ 'FindNonShortCircuit' ]
    //过滤器（Filter file）文件可以定义匹配检测项、被检查的类和被检查方法的一套匹配规则，让我们可以为项目做定制化
    includeFilter = file("${project.rootDir}/code-analysis/spotbugs/include-filter.xml")
    excludeFilter = file("${project.rootDir}/code-analysis/spotbugs/exclude-filter.xml")
    //onlyAnalyze指定哪些代码要被SpotBugs分析，在大型项目里面用这个属性避免没必要的分析，
    //可能会大大减少运行分析所需的时间。可以指定类名，或者包名，指定包名的时候用.*和.-的作用一样，意思是分析这个包下以及子包中的文件
    //onlyAnalyze = ['com.foobar.MyClass', 'com.foobar.mypkg.*']
    //projectName = name
    //release = version
    //extraArgs = [ '-nested:false' ]
    //jvmArgs用于设置JVM参数 总共有英语（en 默认），日语（ja），法语（fr）三种
    //jvmArgs = [ '-Duser.language=en' ]
    //maxHeapSize是设置JVM最大堆内存大小 在spotbugsextension#maxHeapSizea中说了默认值为空，因此会使用Gradle的默认配置，所以一般不用管。
    //maxHeapSize = '512m'
}

spotbugsMain {
    reports {
        html {
            required = true
            outputLocation = file("${project.layout.buildDirectory.asFile.get()}/code-analysis/spotbugsReportDir/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
}
