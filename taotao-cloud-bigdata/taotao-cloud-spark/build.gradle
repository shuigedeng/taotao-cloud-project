apply plugin: "scala"
apply plugin: "java"
apply plugin: "idea"

//sourceSets {
//    main {
//        scala {
//            srcDirs = ["src/main/scala"]
//        }
//    }
//
//    test {
//        scala {
//            srcDirs = ["src/test/scala"]
//        }
//    }
//}

dependencies {
    implementation("org.apache.spark:spark-core_2.13:4.0.1")
    implementation("org.apache.spark:spark-catalyst_2.13:4.0.1")
    implementation("org.apache.spark:spark-graphx_2.13:4.0.1")
    implementation("org.apache.spark:spark-sql_2.13:4.0.1") {
        exclude group: "org.codehaus.janino", module: "janino"
    }
    implementation("org.apache.spark:spark-streaming_2.13:4.0.1")
    implementation("org.apache.spark:spark-mllib_2.13:4.0.1")
    implementation("org.apache.spark:spark-hive_2.13:4.0.1")
    implementation("org.apache.spark:spark-avro_2.13:4.0.1")
    implementation("org.apache.spark:spark-streaming-kafka-0-10_2.13:4.0.1")
    implementation("org.apache.spark:spark-sql-kafka-0-10_2.13:4.0.1")

    implementation "org.apache.hudi:hudi-spark3.5-bundle_2.13:1.0.1"

    implementation("net.heartsavior.spark:spark-sql-kafka-offset-committer_2.12:0.4.0-spark-3.0") {
        exclude group: "org.scala-lang", module: "scala-library"
    }

    implementation "org.apache.hadoop:hadoop-common:3.4.2"
    implementation "org.apache.hadoop:hadoop-mapreduce-client-core:3.4.2"
    implementation "org.apache.hadoop:hadoop-mapreduce-client-common:3.4.2"
    implementation "org.apache.hadoop:hadoop-hdfs:3.4.2"

    implementation "org.scala-lang:scala-library:2.13.17"
    implementation "org.scala-lang:scala-compiler:2.13.17"
    implementation "org.scala-lang:scala-reflect:2.13.17"

    //implementation 'org.slf4j:slf4j-api:2.0.17'
    //implementation 'org.slf4j:slf4j-reload4j:2.0.17'

    implementation "com.alibaba.fastjson2:fastjson2:2.0.59"

}

jar {
    manifest {
        attributes 'Main-Class': "com.example.Main"
    }
    from sourceSets.main.output
    dependsOn configurations.runtimeClasspath
}

//shadowJar {
//    mergeServiceFiles()
//    archiveClassifier = ""
//
//    //transform(Log4j2PluginsCacheFileTransformer)
//    //version = 1.0
//    manifest {
//        attributes(
//                "Main-Class": "com.taotao.cloud.hudi.TaoTaoCloudLogHudi"
//        )
//    }
//
//    zip64 true
//    //dependencies {
//    //    exclude(dependency("xml-apis:xml-apis:.*"))
//    //    exclude(dependency("xerces:xercesImpl:.*"))
//    //    exclude(dependency("org.apache.avro:avro:1.7.*"))
//    //    exclude(dependency{ it.moduleGroup == "xml-apis" })
//    //}
//}


configurations {
    configureEach {
        resolutionStrategy.cacheChangingModulesFor 0, "seconds"
        resolutionStrategy.cacheDynamicVersionsFor 0, "seconds"

        resolutionStrategy {
            force "org.glassfish:javax.el:3.0.0"
        }
    }
}
