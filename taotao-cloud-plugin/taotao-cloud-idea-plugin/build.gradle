import org.jetbrains.intellij.platform.gradle.TestFrameworkType
import org.jetbrains.intellij.platform.gradle.tasks.VerifyPluginTask
import org.jetbrains.intellij.platform.gradle.IntelliJPlatformType
import org.jetbrains.intellij.platform.gradle.models.ProductRelease

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()

        maven {
            url = "https://repo1.maven.org/maven2"
        }

        maven {
            allowInsecureProtocol = true
            url = 'https://maven.aliyun.com/repository/public'
        }
        maven {
            allowInsecureProtocol = true

            credentials {
                username = findProperty("mavenUsername") ?: System.getenv("TAOTAO_CLOUD_MAVEN_USERNAME")
                password = findProperty("mavenPassword") ?: System.getenv("TAOTAO_CLOUD_MAVEN_PASSWORD")
            }
            url = 'https://repo.rdc.aliyun.com/repository/136936-release-reey0l/'
        }
        //阿里云新的仓库
        maven {
            credentials {
                username = findProperty("mavenUsernameNew") ?: System.getenv("TAOTAO_CLOUD_MAVEN_USERNAME_NEW")
                password = findProperty("mavenPasswordNew") ?: System.getenv("TAOTAO_CLOUD_MAVEN_PASSWORD_NEW")
            }
            url = 'https://packages.aliyun.com/60516c4824e1e6fbecd22990/maven/2085441-release-8v0qbs'
        }

        maven {
            allowInsecureProtocol = true
            url = "https://mirrors.cloud.tencent.com/nexus/repository/maven-public/"
        }

        maven {
            allowInsecureProtocol = true
            url = "https://mirrors.huaweicloud.com/repository/maven/"
        }

        maven { url = "https://repo.spring.io/snapshot" }
        maven { url = "https://repo.spring.io/milestone" }
        maven { url = 'https://repo.spring.io/release' }

        maven { url = "https://maven.aliyun.com/repository/central" }
        maven { url = "https://maven.aliyun.com/repository/public" }
        maven { url = "https://maven.aliyun.com/repository/google" }
        maven { url = "https://maven.aliyun.com/repository/gradle-plugin" }
        maven { url = "https://maven.aliyun.com/repository/spring" }
        maven { url = "https://maven.aliyun.com/repository/spring-plugin" }
        maven { url = "https://maven.aliyun.com/repository/grails-core" }
        maven { url = "https://maven.aliyun.com/repository/apache-snapshots" }

        maven { url = "https://repository.aspose.com/repo/" }
        maven { url = "https://repo.e-iceblue.cn/repository/maven-public/" }

        maven { url = "https://s01.oss.sonatype.org/content/repositories/snapshots/" }
    }
}

plugins {
    id "java"
    //https://plugins.gradle.org/plugin/org.jetbrains.intellij.platform
    //https://plugins.jetbrains.com/docs/intellij/tools-intellij-platform-gradle-plugin.html
    id("org.jetbrains.intellij.platform") version "2.9.0"
}

repositories {
    mavenCentral()

    intellijPlatform {
        defaultRepositories()

        //releases()
        //marketplace()
    }
}

apply plugin: "java"

dependencies {
    intellijPlatform {
        //https://www.jetbrains.com/intellij-repository/releases
        //https://plugins.jetbrains.com/docs/intellij/tools-intellij-platform-gradle-plugin-dependencies-extension.html#default-target-platforms
        intellijIdeaUltimate '2025.2'

        //https://plugins.jetbrains.com/docs/intellij/plugin-dependencies.html
        bundledPlugin 'com.intellij.java'
        bundledPlugin 'com.intellij.gradle'
        bundledPlugin 'org.intellij.groovy'
        bundledPlugin 'com.intellij.copyright'
        bundledPlugin 'com.intellij.spring'
        bundledPlugin 'com.intellij.spring.boot'
        bundledPlugin 'org.intellij.intelliLang'
        bundledPlugin 'com.intellij.modules.json'
        bundledPlugin 'org.jetbrains.plugins.yaml'
        bundledPlugin 'org.intellij.plugins.markdown'

        //plugin 'org.intellij.scala', '2024.1.4'

        testFramework TestFrameworkType.Platform.INSTANCE
    }

    //testImplementation "junit:junit:4.13.2"
    implementation "org.dromara.hutool:hutool-all:6.0.0-M22"
    implementation "com.google.zxing:core:3.5.3"
    implementation "com.google.zxing:javase:3.5.3"

    testImplementation 'org.junit.jupiter:junit-jupiter:5.13.4'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.13.4'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.13.4'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.13.4'
    testImplementation "org.assertj:assertj-core:3.27.4"
}

intellijPlatform {
    buildSearchableOptions = true
    //instrumentCode = true
    projectName = "TaoTaoToolKit"
    //sandboxContainer = '...'

    pluginConfiguration {
        id = 'com.taotao.cloud.idea.plugin'
        name = 'TaoTaoToolKit'
        version = '2025.10'
        description =
                """
                <h3>Tool sets commonly used by programmers</h3>
                <ul>
                    <li>SQL to elasticSearch</li>
                    <li>Date to timestamp</li>
                    <li>Timestamp to date</li>
                    <li>JSON formatting</li>
                    <li>URL encoding</li>
                    <li>URL decoding</li>
                    <li>base64 encoding</li>
                    <li>base64 decoding</li>
                    <li>Mobile phone number home</li>
                    <li>IP home</li>
                    <li>MD5 encryption</li>
                    <li>SHA1 encryption</li>
                    <li>SHA224 encryption</li>
                    <li>SHA256 encryption</li>
                    <li>SHA384 encryption</li>
                    <li>SHA512 encryption</li>
                    <li>UUID random value</li>
                    <li>Regular expression</li>
                    <li>Generate qrccode</li>
                </ul>
                """
        changeNotes =
                """
                <h2>New plugin</h2>
                <ul>
                  <li>inlined during build from CHANGELOG.md</li>
                  <li>inlined during build from README.md</li>
                </ul>
                <h2>Bug Fixes</h2>
                <ul>
                  <li>Fixed issue 1</li>
                  <li>Fixed issue 2</li>
                </ul>
                """

        //productDescriptor {
        //    //插件的产品代码，用于JetBrains销售系统。该值必须由JetBrains预先批准，并且必须符合指定的要求
        //    code = 'MY_CODE'
        //    //主版本的发布日期，格式为YYYYMMDD。
        //    releaseDate = '20240217'
        //    //主要版本，以特定的数字格式表示。
        //    releaseVersion = '20241'
        //    //指示插件是否为免费增值插件的布尔值。
        //    optional = false
        //    //指定用于确定插件是否为EAP版本的布尔值。
        //    eap = false
        //}

        //最低支持的版本 当前插件的起止 IDE 版本支持
        //版本参考：https://plugins.jetbrains.com/docs/intellij/build-number-ranges.html?from=jetbrains.org#intellij-platform-based-products-of-recent-ide-versions
        ideaVersion {
            //与插件兼容的最早IDE版本。
            sinceBuild = '252'
            //与插件兼容的最新IDE版本。未定义的值表示与从since-build中提到的版本开始的所有IDE兼容，包括可能导致兼容性问题的潜在未来版本。
            untilBuild = '252.*'
        }

        vendor {
            name = 'shuigedeng'
            email = '981376577@qq.com'
            url = 'https://taotaocloud.top'
        }
    }

    publishing {
        //host = 'https://plugins.jetbrains.com'
        token = System.getenv("IEDA_PLUGIN_PUBLISH_TOKEN")
        // The pluginVersion is based on the SemVer (https://semver.org) and supports pre-release labels, like 2.1.7-alpha.3
        // Specify pre-release label to publish the plugin in a custom Release Channel automatically. Read more:
        // https://plugins.jetbrains.com/docs/intellij/deployment.html#specifying-a-release-channel
        //channels = ['default']
        //ideServices = false
        //hidden = false
    }

    //signing {
    //    //certificateChain = providers.environmentVariable("CERTIFICATE_CHAIN")
    //    //privateKey = providers.environmentVariable("PRIVATE_KEY")
    //    //password = providers.environmentVariable("PRIVATE_KEY_PASSWORD")
    //    //cliPath = file('/path/to/marketplace-zip-signer-cli.jar')
    //    //keyStore = file('/path/to/keyStore.ks')
    //    //keyStorePassword = '...'
    //    //keyStoreKeyAlias = '...'
    //    //keyStoreType = '...'
    //    //keyStoreProviderName = '...'
    //    //privateKey = '...'
    //    //privateKeyFile = file('/path/to/private.pem')
    //    //password = '...'
    //    //certificateChain = '...'
    //    //certificateChainFile = file('/path/to/chain.crt')
    //}

    pluginVerification {
        //cliPath = file('/path/to/plugin-verifier-cli.jar')
        //freeArgs = ['foo', 'bar']
        //homeDirectory = file('/path/to/pluginVerifierHomeDirectory/')
        //downloadDirectory = file('/path/to/pluginVerifierHomeDirectory/ides/')
        //failureLevel = VerifyPluginTask.FailureLevel.ALL
        //verificationReportsDirectory = 'build/reports/pluginVerifier'
        //verificationReportsFormats = VerifyPluginTask.VerificationReportsFormats.ALL
        //externalPrefixes = 'com.example'
        //teamCityOutputFormat = false
        //subsystemsToCheck = VerifyPluginTask.Subsystems.ALL
        //ignoredProblemsFile = file('/path/to/ignoredProblems.txt')

        ides {
            //ide IntelliJPlatformType.RustRover, "2023.3"
            //local file('/path/to/ide/')
            recommended()
            //select {
            //    it.types = [IntelliJPlatformType.PhpStorm]
            //    it.channels = [ProductRelease.Channel.RELEASE]
            //    it.sinceBuild = '232'
            //    it.untilBuild = '241.*'
            //}
        }
    }
}

//intellijPlatformTesting {
//    runIde {
//        register("runIdeForUiTests") {
//            task {
//                jvmArgumentProviders += CommandLineArgumentProvider {
//                    listOf(
//                            "-Drobot-server.port=8082",
//                            "-Dide.mac.message.dialogs.as.sheets=false",
//                            "-Djb.privacy.policy.text=<!--999.999-->",
//                            "-Djb.consents.confirmation.enabled=false",
//                    )
//                }
//            }
//
//            plugins {
//                robotServerPlugin()
//            }
//        }
//    }
//    testIde
//    testIdeUi
//    testIdePerformance
//}

//老版本的配置
////version "3.2022.15"
//
//// 配置开发过程中运行的 IDEA 沙盒信息
//// https://github.com/JetBrains/gradle-intellij-plugin
//// https://juejin.cn/post/7249380394456596535#heading-35
//intellij {
//    // 插件名称
//    pluginName = "TaoTaoToolKit"
//    //沙箱目录位置，用于保存IDEA的设置，默认在build文件下面，防止clean，放在根目录下。
//    //sandboxDir = "${rootProject.rootDir}/idea-sandbox"
//
//    // IDEA 的版本
//    version = "2025.1"
//    // 这里 IU 是指付费版, 也可以选择 IC 对应社区版
//    type = "IU"
//
//    // 各种版本去这里找
//    // https://www.jetbrains.com/intellij-repository/releases
//    //Disables updating since-build attribute in plugin.xml
//    // 配合这个参数，屏蔽插件安装时报的错：Plugin is not compatible with the current version of the IDE
//    // updateSinceUntilBuild也可以在plugin.xml配置 <idea-version since-build="191.0"/>
//    // 其中191.0表示2019.1月发布的版本，0表示无限大的版本
//    updateSinceUntilBuild = false
//    downloadSources = true
//
//    // 用到的插件
//    // plugins.set(listOf())
//    plugins = ['com.intellij.java',
//               'com.intellij.database',
//               'com.intellij.spring',
//               'com.intellij.spring.boot',
//               'org.jetbrains.plugins.yaml',
//               'org.intellij.intelliLang']
//}
//
//patchPluginXml {
//    //changeNotes = """
//    //              TaoTaoToolKit-1.0.1
//    //              """
//
//    //<!-- 插件兼容IDEA的最大和最小 build 号，两个属性可以任选一个或者同时使用
//    //官网详细介绍：http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html-->
//    //<idea-version since-build="3000" until-build="3999"/>
//
//    // 设置插件兼容的版本
//
//    //最低支持的版本 当前插件的起止 IDE 版本支持
//    //版本参考：https://plugins.jetbrains.com/docs/intellij/build-number-ranges.html?from=jetbrains.org#intellij-platform-based-products-of-recent-ide-versions
//    sinceBuild.set("251")
//    //最高支持的版本，不能不设置，不设置是默认为 project.version
//    untilBuild.set("251.*")
//}
//
//// https://plugins.jetbrains.com/docs/intellij/plugin-signing.html
////signPlugin {
////    certificateChain.set(System.getenv("CERTIFICATE_CHAIN"))
////    privateKey.set(System.getenv("PRIVATE_KEY"))
////    password.set(System.getenv("PRIVATE_KEY_PASSWORD"))
////}
//
////https://plugins.jetbrains.com/author/me
////https://plugins.jetbrains.com/docs/intellij/publishing-plugin.html
////https://plugins.jetbrains.com/plugin/20506-taotaocloudideaplugin
//publishPlugin { token.set(System.getenv("IEDA_PLUGIN_PUBLISH_TOKEN")) }
