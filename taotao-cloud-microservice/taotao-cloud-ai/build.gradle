repositories {
    mavenLocal()
    mavenCentral()

    maven {
        url = "https://repo1.maven.org/maven2"
    }

    maven {
        allowInsecureProtocol = true
        url = 'https://maven.aliyun.com/repository/public'
    }
    maven {
        allowInsecureProtocol = true

        credentials {
            username = findProperty("mavenUsername") ?: System.getenv("TAOTAO_CLOUD_MAVEN_USERNAME")
            password = findProperty("mavenPassword") ?: System.getenv("TAOTAO_CLOUD_MAVEN_PASSWORD")
        }
        url = 'https://repo.rdc.aliyun.com/repository/136936-release-reey0l/'
    }
    //阿里云新的仓库
    maven {
        credentials {
            username = findProperty("mavenUsernameNew") ?: System.getenv("TAOTAO_CLOUD_MAVEN_USERNAME_NEW")
            password = findProperty("mavenPasswordNew") ?: System.getenv("TAOTAO_CLOUD_MAVEN_PASSWORD_NEW")
        }
        url = 'https://packages.aliyun.com/60516c4824e1e6fbecd22990/maven/2085441-release-8v0qbs'
    }

    maven {
        allowInsecureProtocol = true
        url = "https://mirrors.cloud.tencent.com/nexus/repository/maven-public/"
    }

    maven {
        allowInsecureProtocol = true
        url = "https://mirrors.huaweicloud.com/repository/maven/"
    }

    maven { url = "https://repo.spring.io/snapshot" }
    maven { url = "https://repo.spring.io/milestone" }
    maven { url = 'https://repo.spring.io/release' }

    maven { url = "https://maven.aliyun.com/repository/central" }
    maven { url = "https://maven.aliyun.com/repository/public" }
    maven { url = "https://maven.aliyun.com/repository/google" }
    maven { url = "https://maven.aliyun.com/repository/gradle-plugin" }
    maven { url = "https://maven.aliyun.com/repository/spring" }
    maven { url = "https://maven.aliyun.com/repository/spring-plugin" }
    maven { url = "https://maven.aliyun.com/repository/grails-core" }
    maven { url = "https://maven.aliyun.com/repository/apache-snapshots" }
}

dependencies {
    implementation platform("org.springframework.ai:spring-ai-bom:1.1.0-M2")
    implementation platform("com.alibaba.cloud.ai:spring-ai-alibaba-bom:1.0.0.4")

    //cloud
    implementation "io.github.shuigedeng:taotao-cloud-starter-stream"
    implementation "io.github.shuigedeng:taotao-cloud-starter-alibaba"
    implementation "io.github.shuigedeng:taotao-cloud-starter-ttc"
    implementation "io.github.shuigedeng:taotao-cloud-starter-openfeign"

    //boot
    implementation "io.github.shuigedeng:taotao-boot-starter-eventbus"
    implementation "io.github.shuigedeng:taotao-boot-starter-mq-rocketmq"
    implementation "io.github.shuigedeng:taotao-boot-starter-mq-kafka"
    implementation "io.github.shuigedeng:taotao-boot-starter-grpc"
    implementation "io.github.shuigedeng:taotao-boot-starter-lock"
    implementation "io.github.shuigedeng:taotao-boot-starter-dingtalk"
    implementation "io.github.shuigedeng:taotao-boot-starter-elk"
    implementation "io.github.shuigedeng:taotao-boot-starter-captcha"
    implementation "io.github.shuigedeng:taotao-boot-starter-office"
    implementation "io.github.shuigedeng:taotao-boot-starter-third-client"
    implementation "io.github.shuigedeng:taotao-boot-starter-web"
    implementation "io.github.shuigedeng:taotao-boot-starter-webagg"


	//alibaba ai
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-dashscope"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-arms-observation"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-memory"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-mcp-registry"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-mcp-router"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-nacos-prompt"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-nl2sql"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-common"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-alitranslate"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-amap"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-aliyunaisearch"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-openalex"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-baidumap"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-baidusearch"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-baidutranslate"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-bravesearch"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-jinacrawler"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-firecrawl"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-dingtalk"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-duckduckgo"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-githubtoolkit"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-googletranslate"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-googlescholar"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-jsonprocessor"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-kuaidi100"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-larksuite"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-microsofttranslate"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-metaso"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-regex"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-sensitivefilter"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-serpapi"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-sinanews"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-time"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-tencentmap"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-toutiaonews"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-tushare"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-opentripmap"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-weather"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-youdaotranslate"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-tripadvisor"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-wikipedia"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-yuque"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-tavilysearch"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-searches"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-ollamasearchmodel"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-minio"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-tool-calling-worldbankdata"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-store-analyticdb"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-store-tablestore"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-store-oceanbase"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-store-opensearch"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-store-tair"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-memory-jdbc"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-memory-redis"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-memory-tablestore"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-memory-elasticsearch"

    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-parser-apache-pdfbox"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-parser-bibtex"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-parser-bshtml"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-parser-directory"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-parser-markdown"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-parser-multi-modality"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-parser-pdf-tables"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-parser-tika"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-parser-yaml"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-reader-arxiv"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-reader-bilibili"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-reader-chatgpt-data"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-reader-elasticsearch"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-reader-email"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-reader-github"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-reader-gitbook"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-reader-gitlab"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-reader-gpt-repo"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-reader-huggingface-fs"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-reader-larksuite"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-reader-mbox"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-reader-mongodb"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-reader-mysql"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-reader-notion"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-reader-obsidian"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-reader-onenote"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-reader-poi"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-reader-tencent-cos"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-reader-youtube"
    implementation "com.alibaba.cloud.ai:spring-ai-alibaba-starter-document-reader-yuque"


    //spring ai
    // https://repo.spring.io/milestone
    // https://repo.spring.io/snapshot
    implementation 'org.springframework.ai:spring-ai-starter-model-anthropic'
    //使用OpenAI
    implementation 'org.springframework.ai:spring-ai-starter-model-openai'
    //使用transformers
    implementation 'org.springframework.ai:spring-ai-starter-model-transformers'
    //使用ollama
    implementation 'org.springframework.ai:spring-ai-starter-model-ollama'
    //redis
    implementation 'org.springframework.ai:spring-ai-starter-vector-store-redis'
    //使用PGVector作为向量数据库
    implementation 'org.springframework.ai:spring-ai-starter-vector-store-pgvector'
    //引入PDF解析器
    implementation 'org.springframework.ai:spring-ai-pdf-document-reader'

    //mcp
    implementation 'org.springframework.ai:spring-ai-starter-mcp-server'
    implementation 'org.springframework.ai:spring-ai-starter-mcp-server-webmvc'
    implementation 'org.springframework.ai:spring-ai-starter-mcp-server-webflux'
    implementation 'org.springframework.ai:spring-ai-starter-mcp-client'
    implementation 'org.springframework.ai:spring-ai-starter-mcp-client-webflux'

    implementation 'org.springframework.ai:spring-ai-spring-boot-testcontainers'

    //implementation 'org.springframework.ai:spring-ai-azure-openai-spring-boot-starter'
    //implementation 'org.springframework.ai:spring-ai-azure-vector-store-spring-boot-starter'
    //implementation 'org.springframework.ai:spring-ai-bedrock-ai-spring-boot-starter'
    //implementation 'org.springframework.ai:spring-ai-chroma-store-spring-boot-starter'
    //implementation 'org.springframework.ai:spring-ai-milvus-store-spring-boot-starter'
    //implementation 'org.springframework.ai:spring-ai-mistral-ai-spring-boot-starter'
    //implementation 'org.springframework.ai:spring-ai-neo4j-store-spring-boot-starter'

    //implementation 'org.springframework.ai:spring-ai-pinecone-store-spring-boot-starter'
    //implementation 'org.springframework.ai:spring-ai-postgresml-spring-boot-starter'
    //implementation 'org.springframework.ai:spring-ai-qdrant-store-spring-boot-starter'
    //implementation 'org.springframework.ai:spring-ai-stability-ai-spring-boot-starter'
    //implementation 'org.springframework.ai:spring-ai-vertex-ai-gemini-spring-boot-starter'
    //implementation 'org.springframework.ai:spring-ai-vertex-ai-palm2-spring-boot-starter'
    //implementation 'org.springframework.ai:spring-ai-weaviate-store-spring-boot-starter'

    //AVIATOR——轻量级JAVA表达式求值引擎 https://blog.csdn.net/ZhangQingmu/article/details/125087255
    //https://code.google.com/p/aviator/
    //http://code.google.com/p/aviator/wiki/User_Guide_zh
    //https://search.maven.org/artifact/com.googlecode.aviator/aviator
    implementation "com.googlecode.aviator:aviator:5.4.3"

    //https://search.maven.org/artifact/com.google.protobuf/protobuf-java
    implementation "com.google.protobuf:protobuf-java:4.32.0"
    //https://search.maven.org/artifact/com.google.protobuf/protobuf-java-util
    implementation "com.google.protobuf:protobuf-java-util:4.32.0"
    //https://search.maven.org/artifact/com.googlecode.protobuf-java-format/protobuf-java-format
    //implementation "com.googlecode.protobuf-java-format:protobuf-java-format:1.4"

    //https://search.maven.org/artifact/io.protostuff/protostuff-core
    implementation "io.protostuff:protostuff-core:1.8.0"
    //https://search.maven.org/artifact/io.protostuff/protostuff-runtime
    implementation "io.protostuff:protostuff-runtime:1.8.0"

    //https://search.maven.org/artifact/org.apache.velocity/velocity-engine-core
    implementation 'org.apache.velocity:velocity-engine-core:2.4.1'

    //https://search.maven.org/artifact/org.freemarker/freemarker
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'

    annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"
    api "com.querydsl:querydsl-jpa:5.1.0:jakarta"
    api "jakarta.persistence:jakarta.persistence-api:3.1.0"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

application {
    //指定应用程序的入口点（主类）
    mainClass = "com.taotao.cloud.ai.TaoTaoCloudAiApplication"
    applicationName = "taotao-cloud-ai"
}

description = "ai模块"

configurations {
    configureEach {
        resolutionStrategy.cacheChangingModulesFor 0, "seconds"
        resolutionStrategy.cacheDynamicVersionsFor 0, "seconds"

        resolutionStrategy {
            force "org.bouncycastle:bcprov-jdk15on:1.70"
        }

        exclude group: "org.springframework.boot", module: "spring-boot-starter-data-jpa"
        exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
        exclude group: "com.querydsl", module: "querydsl-apt"
        exclude group: "commons-logging", module: "commons-logging"
        exclude group: "com.redis.om", module: "redis-om-spring"
    }
}
