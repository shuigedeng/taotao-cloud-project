dependencies {
    implementation project(":taotao-cloud-microservice:taotao-cloud-business:taotao-cloud-wechat:taotao-cloud-wechat-api")

    //cloud
    implementation "io.github.shuigedeng:taotao-cloud-starter-stream"
    implementation "io.github.shuigedeng:taotao-cloud-starter-alibaba"
    implementation "io.github.shuigedeng:taotao-cloud-starter-ttc"
    implementation "io.github.shuigedeng:taotao-cloud-starter-openfeign"
    implementation "io.github.shuigedeng:taotao-cloud-starter-seata"
    implementation "io.github.shuigedeng:taotao-cloud-starter-sentinel"

    //boot
    implementation "io.github.shuigedeng:taotao-boot-starter-apollo"
    implementation "io.github.shuigedeng:taotao-boot-starter-dubbo"
    implementation "io.github.shuigedeng:taotao-boot-starter-eventbus"
    implementation "io.github.shuigedeng:taotao-boot-starter-mq-rocketmq"
    implementation "io.github.shuigedeng:taotao-boot-starter-mq-kafka"
    implementation "io.github.shuigedeng:taotao-boot-starter-job-xxl"
    implementation "io.github.shuigedeng:taotao-boot-starter-job-schedule"
    implementation "io.github.shuigedeng:taotao-boot-starter-job-quartz"
    implementation "io.github.shuigedeng:taotao-boot-starter-job-powerjob"
    implementation "io.github.shuigedeng:taotao-boot-starter-job-snail"
    implementation "io.github.shuigedeng:taotao-boot-starter-grpc"
    implementation "io.github.shuigedeng:taotao-boot-starter-lock"
    implementation "io.github.shuigedeng:taotao-boot-starter-statemachine"
    implementation "io.github.shuigedeng:taotao-boot-starter-flowengine"
    implementation "io.github.shuigedeng:taotao-boot-starter-web"
    implementation "io.github.shuigedeng:taotao-boot-starter-webagg"

    // 小程序开发
    //https://search.maven.org/artifact/com.github.binarywang/wx-java-miniapp-spring-boot-starter
    implementation "com.github.binarywang:wx-java-miniapp-spring-boot-starter:4.7.8.B"
    // 公众号开发
    //https://search.maven.org/artifact/com.github.binarywang/wx-java-mp-spring-boot-starter
    implementation "com.github.binarywang:wx-java-mp-spring-boot-starter:4.7.8.B"
    // 微信开放平台
    //https://search.maven.org/artifact/com.github.binarywang/wx-java-mp-spring-boot-starter
    implementation "com.github.binarywang:wx-java-open-spring-boot-starter:4.7.8.B"
    // 微信企业号开发
    //https://search.maven.org/artifact/com.github.binarywang/wx-java-cp-spring-boot-starter
    implementation "com.github.binarywang:wx-java-cp-spring-boot-starter:4.7.8.B"
    // 腾讯企点开发
    //https://search.maven.org/artifact/com.github.binarywang/wx-java-qidian-spring-boot-starter
    implementation "com.github.binarywang:wx-java-qidian-spring-boot-starter:4.7.8.B"

    //https://github.com/lcy19930619/wechat-spring-boot-starter
    //implementation 'net.jlxxw:wechat-spring-boot-starter:2.0.1.20240302'

    //开源的企业微信开放 API 的 Java 实现
    //https://search.maven.org/artifact/cn.felord/wecom-sdk
    implementation 'cn.felord:wecom-sdk:1.3.4'

    annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"
    api "com.querydsl:querydsl-jpa:5.1.0:jakarta"
    api "jakarta.persistence:jakarta.persistence-api:3.1.0"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"
}

application {
    //指定应用程序的入口点（主类）
    mainClass = "com.taotao.cloud.wechat.biz.TaoTaoCloudWechatApplication"
    applicationName = "taotao-cloud-wechat"
}
description = "微信模块biz"

configurations {
    configureEach {
        resolutionStrategy.cacheChangingModulesFor 0, "seconds"
        resolutionStrategy.cacheDynamicVersionsFor 0, "seconds"

        resolutionStrategy {
            //force "org.codehaus.groovy:groovy:3.0.25"
            force 'org.antlr:antlr4:4.13.2'
        }

        //exclude group: "log4j", module: "log4j"
        //exclude group: "log4j", module: "slf4j-simple"
        //exclude group: "org.slf4j", module: "slf4j-log4j12"
        //exclude group: "org.apache.logging.log4j", module: "log4j-slf4j-impl"
        //exclude group: "org.apache.logging.log4j", module: "log4j-to-slf4j"
        //exclude group: "org.apache.logging.log4j", module: "log4j-api"
        exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
    }
}

smartdoc {
    configFile = file("src/main/resources/smart-doc.json")
    // exclude artifact
    //exclude "org.springframework.boot:xx"
    //exclude "org.springframework.boot:ddd"
    // 你可以使用include配置来让插件自动加载指定依赖的source.
    //include "org.springframework.boot:spring-boot-starter-tomcat"
}
